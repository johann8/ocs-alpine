#1 [internal] load .dockerignore
#1 transferring context: 2B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 5.58kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/alpine:3.17
#3 ...

#4 [auth] library/alpine:pull token for registry-1.docker.io
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/library/alpine:3.17
#3 DONE 1.2s

#5 [ 1/13] FROM docker.io/library/alpine:3.17@sha256:ff6bdca1701f3a8a67e328815ff2346b0e4067d32ec36b7992c1fdc001dc8517
#5 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 3.40kB done
#6 DONE 0.0s

#7 [ 9/13] RUN apk del     build-base     apache2-dev     perl-dev     apr-dev     apr-util-dev     && rm -rf /var/cache/apk/*
#7 CACHED

#8 [ 2/13] RUN apk add --no-cache     wget     curl     make     perl     bash     apache2     tzdata     runit     fcgi     tar     php81     php81-curl     php81-gd     php81-ldap     php81-mbstring     php81-simplexml     php81-mysqli     php81-soap     php81-xml     php81-zip     php81-zlib     php81-apache2     php81-fpm     php81-session     php81-dom     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/     && runDeps="$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, "nso:", $2); print "so:" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/
#8 CACHED

#9 [ 4/13] RUN apk add --no-cache     perl-test-mockobject     perl-mime-tools     perl-fcgi     perl-xml-parser     perl-test-harness     perl-lwp-protocol-https     perl-net-ssleay     perl-net-ip     perl-xml-simple     perl-dbi     perl-dbd-mysql     perl-net-ip     perl-archive-zip     perl-switch     perl-mojolicious     perl-plack     perl-test-warn     perl-mojolicious     perl-digest-sha1
#9 CACHED

#10 [ 5/13] RUN ln -snf /usr/share/zoneinfo/Europe/Berlin /etc/localtime && echo Europe/Berlin > /etc/timezone
#10 CACHED

#11 [ 8/13] RUN cd /tmp/OCSNG_UNIX_SERVER-2.11.1/Apache/  && perl Makefile.PL  && make  && make install
#11 CACHED

#12 [ 6/13] RUN wget https://github.com/OCSInventory-NG/OCSInventory-ocsreports/releases/download/2.11.1/OCSNG_UNIX_SERVER-2.11.1.tar.gz -P /tmp  && tar xzf /tmp/OCSNG_UNIX_SERVER-2.11.1.tar.gz -C /tmp;
#12 CACHED

#13 [ 3/13] RUN apk add --no-cache     build-base     apache2-dev     perl-dev     apr-dev     apr-util-dev     && cd /tmp     && wget https://dlcdn.apache.org/perl/mod_perl-2.0.12.tar.gz     && tar -zxvf mod_perl-2.0.12.tar.gz     && cd mod_perl-2.0.12     && perl Makefile.PL MP_APXS=/usr/bin/apxs     && make     && make install     && rm -rf mod_perl-2.0.12.tar.gz mod_perl-2.0.12
#13 CACHED

#14 [ 7/13] RUN echo "yes" | perl -MCPAN -e "install App::cpanminus"  && cpanm CPAN::DistnameInfo  && cpanm Apache::DBI  && cpanm XML::Entities  && cpanm XML::Parser::Lite --force  && cpanm SOAP::Lite  && rm -rf /root/.cpan
#14 CACHED

#15 [10/13] RUN ln -sf /proc/self/fd/1 /var/log/apache2/access.log  && ln -sf /proc/self/fd/2 /var/log/apache2/error.log
#15 CACHED

#16 [11/13] COPY rootfs/ /
#16 DONE 0.0s

#17 [12/13] COPY conf/ /tmp/conf
#17 DONE 0.0s

#18 [13/13] RUN tar czf /apache-conf-dir.tgz /etc/apache2/conf.d
#18 0.313 tar: Removing leading `/' from member names
#18 DONE 0.3s

#19 exporting to image
#19 exporting layers 0.0s done
#19 writing image sha256:29401d0fd20653796ce8f04fa6ad4b5ec593ba16274964c17d06f8f8af8a3cdf done
#19 naming to docker.io/johann8/alpine-ocs:0.3 done
#19 DONE 0.0s
